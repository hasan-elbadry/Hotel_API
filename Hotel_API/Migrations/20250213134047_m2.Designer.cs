// <auto-generated />
using Hotel_API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250213134047_m2")]
    partial class m2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel_API.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 100.0,
                            RoomNumber = "101",
                            Type = "Single",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Price = 150.0,
                            RoomNumber = "102",
                            Type = "Double",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Price = 200.0,
                            RoomNumber = "103",
                            Type = "Suite"
                        },
                        new
                        {
                            Id = 4,
                            Price = 250.0,
                            RoomNumber = "104",
                            Type = "Deluxe",
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Price = 120.0,
                            RoomNumber = "105",
                            Type = "Single"
                        });
                });

            modelBuilder.Entity("Hotel_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SpokenLanguage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Street, NY",
                            Email = "john@example.com",
                            Name = "John Doe",
                            Password = "hashedpassword1",
                            Phone = "1234567890",
                            SpokenLanguage = "English"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Street, LA",
                            Email = "jane@example.com",
                            Name = "Jane Smith",
                            Password = "hashedpassword2",
                            Phone = "0987654321",
                            SpokenLanguage = "French"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Street, TX",
                            Email = "alice@example.com",
                            Name = "Alice Brown",
                            Password = "hashedpassword3",
                            Phone = "1112223333",
                            SpokenLanguage = "Spanish"
                        });
                });

            modelBuilder.Entity("Hotel_API.Models.Room", b =>
                {
                    b.HasOne("Hotel_API.Models.User", "User")
                        .WithMany("Rooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hotel_API.Models.User", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
